name: .NET

on:
  push:
    branches: [ master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ master ]

env:
  DOTNET_VERSION: '9.0.x'
  PROJECT_PATH: 'src/StreamStruct/StreamStruct.csproj'
  TEST_PATH: 'src/StreamStruct.Tests/StreamStruct.Tests.csproj'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    outputs:
      artifact-name: ${{ steps.upload.outputs.artifact-name }}
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    
    - name: Restore dependencies
      run: dotnet restore ${{ env.PROJECT_PATH }}
    
    - name: Build
      run: dotnet build ${{ env.PROJECT_PATH }} --configuration Release --no-restore
    
    - name: Test
      run: dotnet test ${{ env.TEST_PATH }} --configuration Release --no-build --verbosity normal
    
    - name: Publish
      if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/v'))
      run: dotnet publish ${{ env.PROJECT_PATH }} --configuration Release --no-build --output ./publish
    
    - name: Upload build artifacts
      id: upload
      if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/v'))
      uses: actions/upload-artifact@v4
      with:
        name: streamstruct-${{ github.sha }}
        path: ./publish

  release:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: ${{ needs.build-and-test.outputs.artifact-name }}
        path: ./release
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: ./release/*
        name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false