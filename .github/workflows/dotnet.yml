name: .NET

on:
  push:
    branches: [ master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ master ]

env:
  DOTNET_VERSION: '9.0.x'
  PROJECT_PATH: 'src/StreamStruct/StreamStruct.csproj'
  TEST_PATH: 'src/StreamStruct.Tests/StreamStruct.Tests.csproj'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    outputs:
      artifact-name: ${{ steps.upload.outputs.artifact-name }}
      nuget-artifact-name: ${{ steps.upload-nuget.outputs.artifact-name }}
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    
    - name: Restore dependencies
      run: dotnet restore ${{ env.PROJECT_PATH }}
    
    - name: Build
      run: dotnet build ${{ env.PROJECT_PATH }} --configuration Release --no-restore
    
    - name: Test
      run: dotnet test ${{ env.TEST_PATH }} --configuration Release --no-build --verbosity normal
    
    - name: Create NuGet packages
      run: dotnet pack ${{ env.PROJECT_PATH }} --configuration Release --output ${{ github.workspace }}/packages
        
    - name: Publish to NuGet
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
      run: |
        dotnet nuget push ${{ github.workspace }}/packages/*.nupkg -k NUGET_API_KEY -s https://api.nuget.org/v3/index.json
        dotnet nuget push ${{ github.workspace }}/packages/*.snupkg -k NUGET_API_KEY -s https://api.nuget.org/v3/index.json
      env:
        NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}

    - name: Create Release
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          ${{ github.workspace }}/packages/*
        name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false
